[0m[1mdata.template_file.startup_vms_script: Reading...[0m[0m
[0m[1mdata.template_file.startup_vms_script: Read complete after 0s [id=01ee2d8dc92b752e9768244b5b8be5d3049d15f5a9a94e6fcb463e47f441b804][0m
[0m[1mvcd_vapp.app_name: Refreshing state... [id=urn:vcloud:vapp:2c0c130c-bdb4-4876-8bcb-7c36076266aa][0m
[0m[1mdata.vcd_catalog.my-catalog: Reading...[0m[0m
[0m[1mvcd_vapp_org_network.vappOrgNet: Refreshing state... [id=urn:vcloud:network:82b838a7-43d4-4c91-a816-143861b02b7f][0m
[0m[1mdata.vcd_catalog.my-catalog: Read complete after 1s [id=urn:vcloud:catalog:d3fbba63-5bac-49f7-b0cf-e99b62b668df][0m
[0m[1mdata.vcd_catalog_vapp_template.vm_rhcos_template: Reading...[0m[0m
[0m[1mtls_private_key.installkey: Refreshing state... [id=c273707839ecad4b970a3f37408e39e495b2a68d][0m
[0m[1mlocal_file.write_public_key: Refreshing state... [id=ad55f1e43b63fc153874917f2378d4608577b05a][0m
[0m[1mlocal_file.write_private_key: Refreshing state... [id=dce6f09191b2ff206b161307970df6a934c15592][0m
[0m[1mmodule.network.data.vcd_org_vdc.my-org-vdc: Reading...[0m[0m
[0m[1mmodule.network.data.template_file.ansible_remove_entries_bastion: Reading...[0m[0m
[0m[1mmodule.network.data.template_file.ansible_add_entries_bastion: Reading...[0m[0m
[0m[1mmodule.network.data.template_file.ansible_add_entries_bastion: Read complete after 0s [id=232283e2ccc30d6f2d22e938283fa1242cb4dda5a15524b382f951848f1f9c27][0m
[0m[1mmodule.network.data.template_file.ansible_net_inventory: Reading...[0m[0m
[0m[1mmodule.network.data.template_file.ansible_remove_entries_bastion: Read complete after 0s [id=b833e7f9695986612e138e3b009c9712f64074ce6d925b8e1fc26769cefe06a9][0m
[0m[1mmodule.network.data.vcd_resource_list.list_of_vdc_edges: Reading...[0m[0m
[0m[1mmodule.network.local_file.ansible_remove_entries_bastion: Refreshing state... [id=81df966de17e5aaa8b7a0d6edc99dfd8e45e5867][0m
[0m[1mmodule.network.local_file.ansible_add_entries_bastion: Refreshing state... [id=4b57dcb0df3c2d5c09755b951b2db35c65b1f117][0m
[0m[1mmodule.network.data.template_file.ansible_net_inventory: Read complete after 0s [id=3432a6828ad8e2d584a67f4669be75cb9dfdbef0b0bddc5098fad25b2d70f758][0m
[0m[1mmodule.network.local_file.ansible_net_inventory: Refreshing state... [id=680ec38f6b61457dfbdfe58444aef81a4d774fb8][0m
[0m[1mmodule.network.null_resource.update_bastion_files: Refreshing state... [id=7658628962498397393][0m
[0m[1mmodule.network.data.vcd_resource_list.list_of_vdc_edges: Read complete after 1s [id=list_of_vdc_edges][0m
[0m[1mmodule.network.data.vcd_nsxt_edgegateway.edge: Reading...[0m[0m
[0m[1mdata.vcd_catalog_vapp_template.vm_rhcos_template: Read complete after 2s [id=urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83][0m
[0m[1mmodule.network.data.vcd_nsxt_edgegateway.edge: Read complete after 1s [id=urn:vcloud:gateway:ad269092-38d8-4caf-9ad2-2e2746e10dc6][0m
[0m[1mmodule.network.vcd_nsxt_ip_set.console-ipset: Refreshing state... [id=urn:vcloud:firewallGroup:720a7a55-1538-4eb7-b942-2ac0411df4ed][0m
[0m[1mmodule.network.vcd_nsxt_nat_rule.ocp_console_dnat: Refreshing state... [id=41364b11-235e-406c-80cb-20232f6ff030][0m
[0m[1mmodule.network.vcd_nsxt_ip_set.cluster-ipset: Refreshing state... [id=urn:vcloud:firewallGroup:af666718-69bf-4673-803d-f8acdc36d041][0m
[0m[1mmodule.network.vcd_nsxt_ip_set.lb-ip1: Refreshing state... [id=urn:vcloud:firewallGroup:62f3c125-649c-4695-95b6-63dc0a1ae79c][0m
[0m[1mmodule.network.data.vcd_org_vdc.my-org-vdc: Read complete after 2s [id=urn:vcloud:vdc:e8c9c0e0-a2ab-45d5-ba77-8c4f6bfc8f8e][0m
[0m[1mmodule.network.vcd_nsxt_firewall.cluster_allow: Refreshing state... [id=urn:vcloud:gateway:ad269092-38d8-4caf-9ad2-2e2746e10dc6][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [33m~[0m update in-place[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # data.local_file.kubeadmin_password[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "local_file" "kubeadmin_password" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64       = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/auth/kubeadmin-password"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # data.template_file.write_final_args[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "template_file" "write_final_args" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = (known after apply)
    }

[1m  # local_file.startup_vms_script[0m will be created
[0m  [32m+[0m[0m resource "local_file" "startup_vms_script" {
      [32m+[0m[0m content              = <<-EOT
            # **********************************************************************************************************************
            # This script starts the vms in the cluster after all machines have been provisioned.
            # **********************************************************************************************************************
            
            vcd login dirw003.us-east.vmware.cloud.ibm.com 763fb494-23a2-4d81-94ea-af7d2e802a1a admin-user -p 98du2stR_q-PRN*nbEwRuXb -v Rob1
            vcd vapp power-on test1-csm.stu
            vcd logout
            /opt/terraform/installer/test1/openshift-install --dir=/opt/terraform/installer/test1 wait-for bootstrap-complete --log-level=info
        EOT
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/root/test1-start-vms.sh"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # local_file.write_final_args[0m will be created
[0m  [32m+[0m[0m resource "local_file" "write_final_args" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/root/test1info.txt"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # null_resource.start_vapp[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "start_vapp" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "always_run" = "$timestamp()"
        }
    }

[1m  # module.bootstrap[0].data.ignition_config.ign["bootstrap-00.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.bootstrap[0].data.ignition_file.hostname["bootstrap-00.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "bootstrap-00"
        }
    }

[1m  # module.bootstrap[0].data.ignition_file.static_ip["bootstrap-00.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.10
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.bootstrap[0].vcd_vapp_vm.vm[0][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 2
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 8192
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "bootstrap-00"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:10"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 700000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.compute_vm[0].data.ignition_config.ign["compute-00.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.compute_vm[0].data.ignition_config.ign["compute-01.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.compute_vm[0].data.ignition_config.ign["compute-02.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.compute_vm[0].data.ignition_file.hostname["compute-00.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "compute-00"
        }
    }

[1m  # module.compute_vm[0].data.ignition_file.hostname["compute-01.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "compute-01"
        }
    }

[1m  # module.compute_vm[0].data.ignition_file.hostname["compute-02.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "compute-02"
        }
    }

[1m  # module.compute_vm[0].data.ignition_file.static_ip["compute-00.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.74
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.compute_vm[0].data.ignition_file.static_ip["compute-01.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.75
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.compute_vm[0].data.ignition_file.static_ip["compute-02.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.76
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.compute_vm[0].vcd_vapp_vm.vm[0][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 4
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 16384
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "compute-00"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:74"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.compute_vm[0].vcd_vapp_vm.vm[1][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 4
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 16384
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "compute-01"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:75"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.compute_vm[0].vcd_vapp_vm.vm[2][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 4
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 16384
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "compute-02"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:76"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_config.ign["control-plane-00.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_config.ign["control-plane-01.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_config.ign["control-plane-02.test1.csm.stu"][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ign" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m merge {
          [32m+[0m[0m source = (known after apply)
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_file.hostname["control-plane-00.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "control-plane-00"
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_file.hostname["control-plane-01.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "control-plane-01"
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_file.hostname["control-plane-02.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/hostname"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "control-plane-02"
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_file.static_ip["control-plane-00.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.71
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_file.static_ip["control-plane-01.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.72
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.control_plane_vm[0].data.ignition_file.static_ip["control-plane-02.test1.csm.stu"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m mode      = 420
      [32m+[0m[0m overwrite = true
      [32m+[0m[0m path      = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered  = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.73
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=172.16.0.69
            EOT
        }
    }

[1m  # module.control_plane_vm[0].vcd_vapp_vm.vm[0][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 4
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 16384
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "control-plane-00"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:71"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.control_plane_vm[0].vcd_vapp_vm.vm[1][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 4
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 16384
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "control-plane-01"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:72"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.control_plane_vm[0].vcd_vapp_vm.vm[2][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "vm" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 4
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 16384
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "control-plane-02"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = false
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = (known after apply)
          [32m+[0m[0m ip_allocation_mode = "DHCP"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:73"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.ignition.data.local_file.bootstrap_ignition[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "local_file" "bootstrap_ignition" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64       = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/bootstrap.ign"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.data.local_file.master_ignition[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "local_file" "master_ignition" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64       = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/master.ign"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.data.local_file.worker_ignition[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "local_file" "worker_ignition" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64       = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/worker.ign"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.data.template_file.append-bootstrap[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "append-bootstrap" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = jsonencode(
            {
              [32m+[0m[0m ignition = {
                  [32m+[0m[0m config  = {
                      [32m+[0m[0m merge = [
                          [32m+[0m[0m {
                              [32m+[0m[0m source = "http://172.16.0.10/installer/test1/bootstrap.ign"
                            },
                        ]
                    }
                  [32m+[0m[0m version = "3.1.0"
                }
            }
        )
    }

[1m  # module.ignition.data.template_file.cluster-dns-02-config[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "cluster-dns-02-config" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: config.openshift.io/v1
            kind: DNS
            metadata:
              creationTimestamp: null
              name: cluster
            spec:
              baseDomain: test1.csm.stu
              privateZone:
                id: /subscriptions/resourceGroups/providers/Microsoft.Network/privateDnsZones/test1.csm.stu
              publicZone:
                id: /subscriptions/resourceGroups/providers/Microsoft.Network/dnszones/csm.stu
            status: {}
        EOT
    }

[1m  # module.ignition.data.template_file.cluster_scheduler[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "cluster_scheduler" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: config.openshift.io/v1
            kind: Scheduler
            metadata:
              creationTimestamp: null
              name: cluster
            spec:
              
              mastersSchedulable: false
                  
              policy:
                name: ""
            status: {}
        EOT
    }

[1m  # module.ignition.data.template_file.install_config_yaml[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "install_config_yaml" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: v1
            baseDomain: csm.stu
            compute:
            - hyperthreading: Enabled
              name: worker
              replicas: 0
            controlPlane:
              hyperthreading: Enabled
              name: master
              replicas: 3
            metadata:
              name: test1
            networking:
              clusterNetwork:
              - cidr: 10.128.0.0/14
                hostPrefix: 23
              networkType: OpenShiftSDN
              serviceNetwork:
              - 172.30.0.0/16
            platform:
              none: {}
            fips: false
            pullSecret: '{"auths":{"cloud.openshift.com":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3NsaXBzaWJtY29ycDFvNnVrZ21wdnYwdW9sbmZqZW1rOXh0Y3VrZjpOVUlJSUlKTDNXOTdWQVJRNzNBOUJRSzAzMjRKWUZaNVQzNjIyRDU5N0NZNE4zMFZYN040Mzc3N1MxQ0hKUjFa","email":"stu_lipshires@us.ibm.com"},"quay.io":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3NsaXBzaWJtY29ycDFvNnVrZ21wdnYwdW9sbmZqZW1rOXh0Y3VrZjpOVUlJSUlKTDNXOTdWQVJRNzNBOUJRSzAzMjRKWUZaNVQzNjIyRDU5N0NZNE4zMFZYN040Mzc3N1MxQ0hKUjFa","email":"stu_lipshires@us.ibm.com"},"registry.connect.redhat.com":{"auth":"NTI1Njc2OTV8dWhjLTFPNlVrZ01QdlYwdU9sTmZqZU1rOXhUQ3VLRjpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSTFZVE00WlRObE1EUTBNekUwWTJVd09UWTVZemhsWXpFM09ESm1aV1kwTWlKOS5zMWVuejRjSE9sUW14TlpWZERIMGZHbHFRdGdreFhTWVdOdGZRVGQwa0prQ3dDRUlTUHQ4MUR1dHdhVUZ1RHBCN2ZUbGhISlNIeEx2THNqWEg3SVh1ZDF5d1A0T00tcTNJR2lXLXlZbl9XU0hKeXBLTWt0MUd0MjF0ak1uOEdmZ1hFdkhhYTVPdEJQem15dUl1SDMwM01oN2s4ZTd3Zk84a0U3X3VVWlN1T3FLOE5qWlZCZ0FGZ2FzSmxXd2VHZWZqcUlBTkpOMk5EZGpjcFJoWEpiV0ZXb1F5TUdtUkk1Y25WYW5kSkFXYzFENF9wSDQtMDdXWU9zMktMb1czNGhrdGxySTZvcUJybEI4akNpTlhROWxNUkRXd1BzTE1hQTNtaUNzZTRnYnBWY2xVUWFraUZDbTAxNF9rWjFxNk1DbDFNMVNrMTcwZVpvdjEzcjVrRTlNN1REZmdaNEliM1dKRFhncno4SF84UEVYclN6RjNtRHpfUjBFT0htTE1JdjA4ajM4TmExTXFJbFR5ZUpnYzhiTndwRm43OFpBUThXNkk2Mmc5YURRTUREQUI3RnBTQWxmblJDRTVMUUdiTzVXUnhndDFuOTV5VHBSTlRNX2lVelZfd0ZVYnN6d0xVQkNTRDZSc3JELWllWXVLSGhDcERPZ05oVF9sTElJVzZFU3NYYnBRanhPcmxwZEhvNlpHTno4OUxYa0MyMzRnVEMzdjlRakNlUmdFZVp6cHlISi13WGRJVjhRV1NYVU9TdHZJVEFsaDZWeGNHak9BTUt2NEIxMENFMlhOWlAzSGtlanp3WDA4R3VpeUVYazdRaGFCbnpIeFhnZllPOGtmeTBBMV9QQ3c4Ty1SbHNFTW95RlIyQ0NKb2JjR1FNNnJjejBsaTlhUkF1b284bw==","email":"stu_lipshires@us.ibm.com"},"registry.redhat.io":{"auth":"NTI1Njc2OTV8dWhjLTFPNlVrZ01QdlYwdU9sTmZqZU1rOXhUQ3VLRjpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSTFZVE00WlRObE1EUTBNekUwWTJVd09UWTVZemhsWXpFM09ESm1aV1kwTWlKOS5zMWVuejRjSE9sUW14TlpWZERIMGZHbHFRdGdreFhTWVdOdGZRVGQwa0prQ3dDRUlTUHQ4MUR1dHdhVUZ1RHBCN2ZUbGhISlNIeEx2THNqWEg3SVh1ZDF5d1A0T00tcTNJR2lXLXlZbl9XU0hKeXBLTWt0MUd0MjF0ak1uOEdmZ1hFdkhhYTVPdEJQem15dUl1SDMwM01oN2s4ZTd3Zk84a0U3X3VVWlN1T3FLOE5qWlZCZ0FGZ2FzSmxXd2VHZWZqcUlBTkpOMk5EZGpjcFJoWEpiV0ZXb1F5TUdtUkk1Y25WYW5kSkFXYzFENF9wSDQtMDdXWU9zMktMb1czNGhrdGxySTZvcUJybEI4akNpTlhROWxNUkRXd1BzTE1hQTNtaUNzZTRnYnBWY2xVUWFraUZDbTAxNF9rWjFxNk1DbDFNMVNrMTcwZVpvdjEzcjVrRTlNN1REZmdaNEliM1dKRFhncno4SF84UEVYclN6RjNtRHpfUjBFT0htTE1JdjA4ajM4TmExTXFJbFR5ZUpnYzhiTndwRm43OFpBUThXNkk2Mmc5YURRTUREQUI3RnBTQWxmblJDRTVMUUdiTzVXUnhndDFuOTV5VHBSTlRNX2lVelZfd0ZVYnN6d0xVQkNTRDZSc3JELWllWXVLSGhDcERPZ05oVF9sTElJVzZFU3NYYnBRanhPcmxwZEhvNlpHTno4OUxYa0MyMzRnVEMzdjlRakNlUmdFZVp6cHlISi13WGRJVjhRV1NYVU9TdHZJVEFsaDZWeGNHak9BTUt2NEIxMENFMlhOWlAzSGtlanp3WDA4R3VpeUVYazdRaGFCbnpIeFhnZllPOGtmeTBBMV9QQ3c4Ty1SbHNFTW95RlIyQ0NKb2JjR1FNNnJjejBsaTlhUkF1b284bw==","email":"stu_lipshires@us.ibm.com"}}}'
            sshKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC0lIuoaUpV3zhROQbj+dK1/VispnSJH2676+VRpzzg0OqOGfxxuWzhR41HH4ZNWU7pTXLSydyCjK+W093dkMJgJAnntZajL6COOUAQYZBh/9Yl0YaIpxlmN9/FemOgzveRaTMSRj+suGWGxTA4bBwXA5MBOdxwhVt9N4Nq7AJEbdQuCs2vhT/iG+nCp+eU56w3KQU4YXW+pYoiIO46g2pYFT8Wu4PArH5BaRXEYOkygSbm/9dfNz3d7Hrorc5laMzLQMoeW7Gpag3AGeIpxN50Nq+tWbYa5LFK/L9P2Cpy/L018AWwVOTnvBJjLsHqHKBhWYZdrQ7swzzRnFzW6f+HCsRErs9MhRk7Et1s2Yy+J8fxdhQVtHl7sHJs5xuzdYlupYdq8bZqnbMbMTG3X01gE1LUMQfONIA13alJK8eDb+8MZPyFib4FYHTeeU/+THHbbVgcxmkQC257rmEzGIZgr9e6eyj00P/HGBOorv0J2c0aCglGJ6pqgI22HbOnZPT6uEf8tQyRCHgdNiSBTwib8dv+hLf2wgjJp+dLRuyH6cmSmsH73pkEleqgk4n2cp88xPrwdGcEYNKKUsWffVBiXBIJG2McLG/ionvBeyACDAy4Sg0RI3lh6bIia6rnkSjUFOe32lSBig1VMIYsuoYIGjVxUDu5kVxCoG4qN5VV9w=='
        EOT
    }

[1m  # module.ignition.data.template_file.post_deployment_05[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "post_deployment_05" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: v1
            kind: Secret
            data:
              common.sh: 
              approve-csrs.sh: IyEvdXNyL2Jpbi9lbnYgYmFzaAojCiMgU2NyaXB0IHRvIGFwcHJvdmUgQ1NScyBmb3Igbm9kZXMgaW4gYW4gT0NQIDQueCBjbHVzdGVyLgojCiMgSU5QVVRTOgojICAgLS1ub2RlLWNvdW50fC0tbm9kZXMgICAtIChvcHRpb25hbCkgdGhlIG51bWJlciBvZiBub2RlcyBmb3Igd2hpY2ggQ1NScyBuZWVkIHRvIGJlIGFwcHJvdmVkCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gMCB3aGljaCBtZWFucyBhcHByb3ZlIGFsbCBDU1JzCiMgICAtLXdhaXQtdGltZSAgICAgICAgICAgIC0gKG9wdGlvbmFsKSBob3cgbG9uZyB0byBzbGVlcCAoc2Vjb25kcykgYmV0d2VlbiBlYWNoIENTUiBjaGVjawojICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDYwCiMgICAtLXdhaXQtY291bnQgICAgICAgICAgIC0gKG9wdGlvbmFsKSBob3cgbWFueSB0aW1lcyB0byB3YWl0CiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gMTAKIwojIE9VVFBVVFM6CiMgICAtIFRyYWNlIG91dHB1dCB0byBzdGRvdXQgYW5kIGxvZ3MvYXBwcm92ZS1jc3JzLmxvZwojCiMgQVNTVU1QVElPTlM6CiMgICAtIEJhc2ggNC4zIG9yIG5ld2VyIGlzIGJlaW5nIHVzZWQuICBBc3NvY2lhdGl2ZSBhbmQgbmFtZSB2YXJpYWJsZXMgYXJlIHVzZWQKIyAgICAgaW4gdGhpcyBzY3JpcHQuCiMgICAtIE9wZW5TaGlmdCBDTEkgKG9jKSBpcyBpbnN0YWxsZWQgaW4gJFBXRAojICAgLSBBIEtVQkVDT05GSUcgZmlsZSBpcyBhdmFpbGFibGUgaW4gJFBXRC9hdXRoL2t1YmVjb25maWcKIwojIFNhbXBsZSBpbnZvY2F0aW9uczoKIyAgIFNlZSB1c2FnZSgpIGZ1bmN0aW9uIGJlbG93LgojCgojIFByb3ZpZGUgdXNhZ2UgaW5mb3JtYXRpb24gaGVyZS4KZnVuY3Rpb24gdXNhZ2UgewogIGVjaG8gIlVzYWdlOiBhcHByb3ZlLWNzcnMuc2ggW29wdGlvbnNdIgogIGVjaG8gIiAgLS1ub2Rlc3wtLW5vZGUtY291bnQgUE9TX0lOVCAgLSAob3B0aW9uYWwpIHRoZSBudW1iZXIgb2Ygbm9kZXMgdG8gYmUgYXBwcm92ZWQiCiAgZWNobyAiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDAsIHdoaWNoIG1lYW5zIGFwcHJvdmUgYWxsIENTUnMiCiAgZWNobyAiICAtLXdhaXQtdGltZSBQT1NfSU5UICAgICAgICAgICAtIChvcHRpb25hbCkgdGhlIG51bWJlciBvZiBzZWNvbmRzIGZvciBlYWNoIHdhaXQgYmV0d2VlbiBhcHByb3ZhbCBjaGVja3MiCiAgZWNobyAiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDYwIHNlY29uZHMiCiAgZWNobyAiICAtLXdhaXQtY291bnQgUE9TX0lOVCAgICAgICAgICAtIChvcHRpb25hbCkgdGhlIG51bWJlciBvZiB0aW1lcyB0byB3YWl0IGZvciB3YWl0LWNvdW50IHNlY29uZHMiCiAgZWNobyAiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDEwIgogIGVjaG8gIiAgLS1oZWxwfC1oICAgICAgICAgICAgICAgICAgICAgLSBlbWl0IHRoaXMgdXNhZ2UgaW5mb3JtYXRpb24iCiAgZWNobyAiIgogIGVjaG8gIiBTYW1wbGUgaW52b2NhdGlvbnM6IgogIGVjaG8gIiAuL2FwcHJvdmUtY3Nycy5zaCIKICBlY2hvICIgLi9hcHByb3ZlLWNzcnMuc2ggLS1ub2RlcyA5IgogIGVjaG8gIiAuL2FwcHJvdmUtY3Nycy5zaCAtLW5vZGVzIDkgLS13YWl0LXRpbWUgMzAgLS13YWl0LWNvdW50IDIwIgogIGVjaG8gIiBXaGVuIHlvdSBwcm92aWRlIGEgbm9kZSBjb3VudCwgdGhlIHNjcmlwdCBmaW5pc2hlcyBhcyBzb29uIGFzIHRoZSBleHBlY3RlZCBudW1iZXIgb2YgQ1NScyBoYXZlIGJlZW4gYXBwcm92ZWQuIgp9Cgpzb3VyY2UgJChkaXJuYW1lICQwKS9jb21tb24uc2gKCiMjIyMjIE1BSU4gIyMjIyMKU0NSSVBUPSR7MCMjKi99CgpjaGVjay1wcmVyZXFzCgojIE1ha2Ugc3VyZSB0aGVyZSBpcyBhICJsb2dzIiBkaXJlY3RvcnkgaW4gdGhlIGN1cnJlbnQgZGlyZWN0b3J5CmlmIFsgISAtZCAiJHtQV0R9L2xvZ3MiIF07IHRoZW4KICBta2RpciAke1BXRH0vbG9ncwogIHJjPSQ/CiAgaWYgWyAiJHJjIiAhPSAiMCIgXTsgdGhlbgogICAgIyBOb3Qgc3VyZSB3aHkgdGhpcyB3b3VsZCBldmVyIGhhcHBlbiwgYnV0Li4uCiAgICAjIEhhdmUgdG8gZWNobyBoZXJlIHNpbmNlIHRyYWNlIGxvZyBpcyBub3Qgc2V0IHlldC4KICAgIGVjaG8gIkNyZWF0aW5nICR7UFdEfS9sb2dzIGRpcmVjdG9yeSBmYWlsZWQuICBFeGl0aW5nLi4uIgogICAgZXhpdCAxCiAgZmkKZmkKCkxPR0ZJTEU9IiR7UFdEfS9sb2dzLyR7U0NSSVBUJS4qfS5sb2ciCmlmIFsgLWYgIiRMT0dGSUxFIiBdOyB0aGVuCiAgcm9sbF9maWxlICIkTE9HRklMRSIKZmkKCnRyYWNlICRTQ1JJUFQgJExJTkVOTyAibWFpbiIgIkJFR0lOICRTQ1JJUFQiCgpub2RlX2NvdW50PSIiCndhaXRfdGltZT0iIgp3YWl0X2NvdW50PSIiCgojIHByb2Nlc3MgdGhlIGlucHV0IGFyZ3MKIyBGb3Iga2V5d29yZC12YWx1ZSBhcmd1bWVudHMgdGhlIGFyZyBnZXRzIHRoZSBrZXl3b3JkIGFuZAojIHRoZSBjYXNlIHN0YXRlbWVudCBhc3NpZ25zIHRoZSB2YWx1ZSB0byBhIHNjcmlwdCB2YXJpYWJsZS4KIyBJZiBhbnkgInN3aXRjaCIgYXJncyBhcmUgYWRkZWQgdG8gdGhlIGNvbW1hbmQgbGluZSBhcmdzLAojIHRoZW4gaXQgd291bGRuJ3QgbmVlZCBhIHNoaWZ0IGFmdGVyIHByb2Nlc3NpbmcgdGhlIHN3aXRjaAojIGtleXdvcmQuICBUaGUgc2NyaXB0IHZhcmlhYmxlIGZvciBhIHN3aXRjaCBhcmd1bWVudCB3b3VsZAojIGJlIGluaXRpYWxpemVkIHRvICJmYWxzZSIgb3IgdGhlIGVtcHR5IHN0cmluZyBhbmQgaWYgdGhlCiMgc3dpdGNoIGlzIHByb3ZpZGVkIG9uIHRoZSBjb21tYW5kIGxpbmUgaXQgd291bGQgYmUgYXNzaWduZWQKIyAidHJ1ZSIuCiMKd2hpbGUgKCggJCMgPiAwICkpOyBkbwogIGFyZz0kMQogIGNhc2UgJGFyZyBpbgogICAgLWh8LWhlbHB8LS1oZWxwICkgdXNhZ2UKICAgIHRyYWNlICRTQ1JJUFQgJExJTkVOTyAibWFpbiIgIkVORCAkU0NSSVBUIgogICAgZXhpdCAwCiAgICAgICAgICAgICAgICAgIDs7CgogICAgLS1ub2Rlc3wtLW5vZGUtY291bnQgKSBub2RlX2NvdW50PSQyOyBzaGlmdAogICAgICAgICAgICAgICAgICA7OwoKICAgIC0td2FpdC10aW1lICkgd2FpdF90aW1lPSQyOyBzaGlmdAogICAgICAgICAgICAgICAgICA7OwoKICAgIC0td2FpdC1jb3VudCApIHdhaXRfY291bnQ9JDI7IHNoaWZ0CiAgICAgICAgICAgICAgICAgIDs7CgogICAgKiApIHVzYWdlOyB0cmFjZSAkU0NSSVBUICRMSU5FTk8gIm1haW4iICJVbmtub3duIG9wdGlvbjogJGFyZyBpbiBjb21tYW5kIGxpbmUuIgogICAgICAgIGV4aXQgMgogICAgICAgICAgICAgICAgICA7OwogIGVzYWMKICAjIHNoaWZ0IHRvIG5leHQga2V5LXZhbHVlIHBhaXIKICBzaGlmdApkb25lCgppZiBbIC16ICIkbm9kZV9jb3VudCIgXTsgdGhlbgogIG5vZGVfY291bnQ9MApmaQoKaWYgWyAteiAiJHdhaXRfdGltZSIgXTsgdGhlbgogIHdhaXRfdGltZT02MApmaQoKaWYgWyAteiAiJHdhaXRfY291bnQiIF07IHRoZW4KICB3YWl0X2NvdW50PTEwCmZpCgppZiBbIC1lICRQV0Qvb2MgXTsgdGhlbgogIGV4cG9ydCBPQz0iLi9vYyIKZWxzZQogIHRlc3QgLWUgJCh3aGljaCBvYykgJiYgewogICAgZXhwb3J0IE9DPSQod2hpY2ggb2MpCiAgfSB8fCB7CiAgICB0cmFjZSAkU0NSSVBUICRMSU5FTk8gIm1haW4iICJFUlJPUjogb2Mgbm90IGZvdW5kIGluIGN1cnJlbnQgd29ya2luZyBkaXJlY3Rvcnkgb3IgcGF0aC4iCiAgICBleGl0IDMKICB9CmZpCgoKaWYgWyAtZSAiJFBXRC9hdXRoL2t1YmVjb25maWciIF07IHRoZW4KICBleHBvcnQgS1VCRUNPTkZJRz0kUFdEL2F1dGgva3ViZWNvbmZpZwplbHNlCiAgdGVzdCAtZSAkS1VCRUNPTkZJRyAmJiB7CiAgICBleHBvcnQgS1VCRUNPTkZJRwogIH0gfHwgewogICAgdHJhY2UgJFNDUklQVCAkTElORU5PICJtYWluIiAiRVJST1I6IGt1YmVjb25maWcgZmlsZSBub3QgZm91bmQuIgogICAgZWNobyAiR2V0IGEgY29weSBvZiB0aGUgY2x1c3RlciBrdWJlY29uZmlnIGFuZCBwdXQgaXQgaGVyZTogJFBXRC9hdXRoL2t1YmVjb25maWciCiAgICBleGl0IDQKICB9IApmaQoKaWYgWyAkbm9kZV9jb3VudCAtZ3QgMCBdOyB0aGVuCiAgdHJhY2UgJFNDUklQVCAkTElORU5PICJtYWluIiAiSU5GTzogSW52b2tpbmc6IGFwcHJvdmUtY3NycyBub2RlX2NvdW50PSRub2RlX2NvdW50IHdhaXRfdGltZT0kd2FpdF90aW1lIHdhaXRfY291bnQ9JHdhaXRfY291bnQuLi4iCiAgYXBwcm92ZS1jc3JzICRub2RlX2NvdW50ICR3YWl0X3RpbWUgJHdhaXRfY291bnQKZWxzZQogIHRyYWNlICRTQ1JJUFQgJExJTkVOTyAibWFpbiIgIklORk86IEludm9raW5nOiBhcHByb3ZlLWFsbC1jc3JzIHdhaXRfdGltZT0kd2FpdF90aW1lIHdhaXRfY291bnQ9JHdhaXRfY291bnQuLi4iCiAgYXBwcm92ZS1hbGwtY3NycyAkd2FpdF90aW1lICR3YWl0X2NvdW50CmZpCgp0cmFjZSAkU0NSSVBUICRMSU5FTk8gIm1haW4iICJFTkQgJFNDUklQVCIK
            metadata:
              name: approve-csrs-scripts
              namespace: ibm-post-deployment
            type: Opaque
        EOT
    }

[1m  # module.ignition.data.template_file.post_deployment_06[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "post_deployment_06" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: v1
            kind: Pod
            metadata:
              name: approve-csrs
              namespace: ibm-post-deployment
            spec:
              containers:
              - name: csr-approve
                imagePullPolicy: Always
                
                image: quay.io/openshift/origin-cli:latest
                
                command: ["/bin/sh", "-c"]
                args:
                  - "mkdir /tmp/csrs-rw && cp /tmp/csrs/*.sh /tmp/csrs-rw && cd /tmp/csrs-rw && ./approve-csrs.sh --wait-count 60 --nodes 3"
                volumeMounts:
                  - name: approve-csrs
                    mountPath: /tmp/csrs
              restartPolicy: Never
              serviceAccount: ibm-deployment-sa
              volumes:
                - name: approve-csrs
                  secret:
                    defaultMode: 0755
                    secretName: approve-csrs-scripts
              tolerations:
                - operator: Exists
              nodeSelector:
                node-role.kubernetes.io/master: ''
        EOT
    }

[1m  # module.ignition.data.template_file.post_deployment_07_secret[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "post_deployment_07_secret" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: v1
            kind: Secret
            data:
              post-deployment-user-cmds.sh: IyBmaW5kIG91dCBpZiBPQ1AgaXMgdXAKCm1hY2hpbmVfY29uZmlncG9vbF91cGRhdGVkPTAKd2hpbGUgWyAkbWFjaGluZV9jb25maWdwb29sX3VwZGF0ZWQgLWx0IDIgXTsgZG8KICAgbWFjaGluZV9jb25maWdwb29sX3VwZGF0ZWQ9JChvYyBnZXQgbWFjaGluZWNvbmZpZ3Bvb2wgfCAgYXdrICd7cHJpbnQgJDN9JyB8IGdyZXAgVHJ1ZSB8d2MgLWwpCiAgIGVjaG8gIm1hY2hpbmUgY29uZmlnIGNvdW50OiAiICRtYWNoaW5lX2NvbmZpZ3Bvb2xfdXBkYXRlZAogICBzbGVlcCAxMApkb25lICAgCm9jIHBhdGNoIE9wZXJhdG9ySHViIGNsdXN0ZXIgLS10eXBlIGpzb24gIC1wICdbeyJvcCI6ICJhZGQiLCAicGF0aCI6ICIvc3BlYy9kaXNhYmxlQWxsRGVmYXVsdFNvdXJjZXMiLCAidmFsdWUiOiB0cnVlfV0nCm9jIGFubm90YXRlIG5hbWVzcGFjZSBvcGVuc2hpZnQtc3RvcmFnZSBvcGVuc2hpZnQuaW8vbm9kZS1zZWxlY3Rvcj0Kb2MgbGFiZWwgbm9kZSAgc3RvcmFnZS0wMC50ZXN0aW5mLmNkYXN0dS5jb20gc3RvcmFnZS0wMS50ZXN0aW5mLmNkYXN0dS5jb20gc3RvcmFnZS0wMi50ZXN0aW5mLmNkYXN0dS5jb20gbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vaW5mcmE9IiIKb2MgbGFiZWwgbm9kZSBzdG9yYWdlLTAwLnRlc3RpbmYuY2Rhc3R1LmNvbSBzdG9yYWdlLTAxLnRlc3RpbmYuY2Rhc3R1LmNvbSBzdG9yYWdlLTAyLnRlc3RpbmYuY2Rhc3R1LmNvbSBjbHVzdGVyLm9jcy5vcGVuc2hpZnQuaW8vb3BlbnNoaWZ0LXN0b3JhZ2U9IiIKb2MgYWRtIHRhaW50IG5vZGUgc3RvcmFnZS0wMC50ZXN0aW5mLmNkYXN0dS5jb20gc3RvcmFnZS0wMS50ZXN0aW5mLmNkYXN0dS5jb20gc3RvcmFnZS0wMi50ZXN0aW5mLmNkYXN0dS5jb20gbm9kZS5vY3Mub3BlbnNoaWZ0LmlvL3N0b3JhZ2U9InRydWUiOk5vU2NoZWR1bGU=
            metadata:
              name: user-cmds-scripts
              namespace: ibm-post-deployment
            type: Opaque
        EOT
    }

[1m  # module.ignition.data.template_file.post_deployment_08[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "post_deployment_08" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            apiVersion: v1
            kind: Pod
            metadata:
              name: user-cmds
              namespace: ibm-post-deployment
            spec:
              containers:
              - name: user-cmds
                imagePullPolicy: Always
                
                image: quay.io/openshift/origin-cli:latest
                
                command: ["/bin/sh", "-c"]
                args:
                  - "mkdir /tmp/user-cmds-rw && cp /tmp/user-cmds/*.sh /tmp/user-cmds-rw && cd /tmp/user-cmds-rw && ./post-install-user-cmds.sh "
                volumeMounts:
                  - name: user-cmds
                    mountPath: /tmp/user-cmds
              restartPolicy: Never
              serviceAccount: ibm-deployment-sa
              volumes:
                - name: user-cmds
                  secret:
                    defaultMode: 0755
                    secretName: user-cmds-scripts
              tolerations:
                - operator: Exists
              nodeSelector:
                node-role.kubernetes.io/master: ''
        EOT
    }

[1m  # module.ignition.local_file.append-bootstrap[0m will be created
[0m  [32m+[0m[0m resource "local_file" "append-bootstrap" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/append-bootstrap.ign"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.cluster-dns-02-config[0m will be created
[0m  [32m+[0m[0m resource "local_file" "cluster-dns-02-config" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/cluster-dns-02-config.bkp"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.cluster_scheduler[0m will be created
[0m  [32m+[0m[0m resource "local_file" "cluster_scheduler" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/manifests/cluster-scheduler-02-config.yml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.install_config_yaml[0m will be created
[0m  [32m+[0m[0m resource "local_file" "install_config_yaml" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/install-config.yaml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.post_deployment_05[0m will be created
[0m  [32m+[0m[0m resource "local_file" "post_deployment_05" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/manifests/99_05-post-deployment.yaml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.post_deployment_06[0m will be created
[0m  [32m+[0m[0m resource "local_file" "post_deployment_06" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/manifests/99_06-post-deployment.yaml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.post_deployment_07[0m will be created
[0m  [32m+[0m[0m resource "local_file" "post_deployment_07" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/manifests/99_07-post-deployment.yaml"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.local_file.post_deployment_08[0m will be created
[0m  [32m+[0m[0m resource "local_file" "post_deployment_08" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/manifests/99_08-post-deployment.bkup"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ignition.null_resource.download_binaries[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "download_binaries" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "always_run" = "$timestamp()"
        }
    }

[1m  # module.ignition.null_resource.generate_ignition[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "generate_ignition" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.ignition.null_resource.generate_manifests[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "generate_manifests" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m triggers = {
          [32m+[0m[0m "install_config" = (known after apply)
        }
    }

[1m  # module.ignition.null_resource.ignition_access_right[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "ignition_access_right" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.lb[0].data.ignition_config.ignition[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "ignition_config" "ignition" {
      [32m+[0m[0m files    = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m systemd  = [
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
          [32m+[0m[0m (known after apply),
        ]
      [32m+[0m[0m users    = [
          [32m+[0m[0m (known after apply),
        ]
    }

[1m  # module.lb[0].data.ignition_file.coredns_clusterdb[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "coredns_clusterdb" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/coredns/cluster.db"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                $ORIGIN test1.csm.stu.
                @	3600 IN	SOA dns. openshift.test1.csm.stu. (
                				2017042745 ; serial
                				7200       ; refresh (2 hours)
                				3600       ; retry (1 hour)
                				1209600    ; expire (2 weeks)
                				3600       ; minimum (1 hour)
                				)
                
                	3600 IN NS dns
                
                dns     IN  A   172.16.0.69
                *.apps.test1.csm.stu     IN A 172.16.0.69
                api-int.test1.csm.stu     IN A 172.16.0.69
                api.test1.csm.stu     IN A 172.16.0.69
                bootstrap-00.test1.csm.stu     IN A 172.16.0.10
                compute-00.test1.csm.stu     IN A 172.16.0.74
                compute-01.test1.csm.stu     IN A 172.16.0.75
                compute-02.test1.csm.stu     IN A 172.16.0.76
                control-plane-00.test1.csm.stu     IN A 172.16.0.71
                control-plane-01.test1.csm.stu     IN A 172.16.0.72
                control-plane-02.test1.csm.stu     IN A 172.16.0.73
                
                
                $ORIGIN 0.16.172.in-addr.arpa.
                @       3600 IN SOA dns. openshift.test1.csm.stu. (
                                                2017042745 ; serial
                                                7200       ; refresh (2 hours)
                                                3600       ; retry (1 hour)
                                                1209600    ; expire (2 weeks)
                                                3600       ; minimum (1 hour)
                                                )
                        IN       NS     172.16.0.69
                69        IN      PTR api-int.test1.csm.stu.
                69        IN      PTR api.test1.csm.stu.
                10        IN      PTR bootstrap-00.test1.csm.stu.
                74        IN      PTR compute-00.test1.csm.stu.
                75        IN      PTR compute-01.test1.csm.stu.
                76        IN      PTR compute-02.test1.csm.stu.
                71        IN      PTR control-plane-00.test1.csm.stu.
                72        IN      PTR control-plane-01.test1.csm.stu.
                73        IN      PTR control-plane-02.test1.csm.stu.
            EOT
        }
    }

[1m  # module.lb[0].data.ignition_file.coredns_corefile[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "coredns_corefile" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/coredns/Corefile"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                .:53 {
                    forward . 9.9.9.9 161.26.0.10 172.16.0.10
                    log
                    errors
                }
                
                test1.csm.stu:53 {
                    file /data/cluster.db
                    log
                    errors
                }
                
                0.16.172.in-addr.arpa:53 {
                    file /data/cluster.db
                    log
                    errors
                }
            EOT
        }
    }

[1m  # module.lb[0].data.ignition_file.dhcpd_conf[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "dhcpd_conf" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/dhcpd/dhcpd.conf"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                # cat /usr/share/doc/dhcp*/dhcpd.conf.sample
                # dhcpd.conf
                #
                # Sample configuration file for ISC dhcpd
                #
                subnet 172.16.0.0 netmask 255.255.255.0 {
                  option domain-name-servers  172.16.0.69;
                  option domain-name "test1.csm.stu";
                  option routers 172.16.0.1;
                  option broadcast-address 172.16.0.254;
                  default-lease-time 600;
                  max-lease-time 7200;
                }
                
                
                
                host bootstrap-00 {
                  hardware ethernet 00:50:56:01:30:10;
                  fixed-address 172.16.0.10;
                }
                host compute-00 {
                  hardware ethernet 00:50:56:01:30:74;
                  fixed-address 172.16.0.74;
                }
                host compute-01 {
                  hardware ethernet 00:50:56:01:30:75;
                  fixed-address 172.16.0.75;
                }
                host compute-02 {
                  hardware ethernet 00:50:56:01:30:76;
                  fixed-address 172.16.0.76;
                }
                host control-plane-00 {
                  hardware ethernet 00:50:56:01:30:71;
                  fixed-address 172.16.0.71;
                }
                host control-plane-01 {
                  hardware ethernet 00:50:56:01:30:72;
                  fixed-address 172.16.0.72;
                }
                host control-plane-02 {
                  hardware ethernet 00:50:56:01:30:73;
                  fixed-address 172.16.0.73;
                }
            EOT
        }
    }

[1m  # module.lb[0].data.ignition_file.haproxy_config[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "haproxy_config" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/haproxy/haproxy.conf"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                defaults
                  maxconn 20000
                  mode    tcp
                  log     /var/run/haproxy/haproxy-log.sock local0
                  option  dontlognull
                  retries 3
                  timeout http-request 10s
                  timeout queue        1m
                  timeout connect      10s
                  timeout client       86400s
                  timeout server       86400s
                  timeout tunnel       86400s
                
                frontend api-server
                    bind :6443
                    default_backend api-server
                
                frontend machine-config-server
                    bind 172.16.0.69:22623
                    default_backend machine-config-server
                
                frontend router-http
                    bind :80
                    default_backend router-http
                
                frontend router-https
                    bind :443
                    default_backend router-https
                
                backend api-server
                    option  httpchk GET /readyz HTTP/1.0
                    option  log-health-checks
                    balance roundrobin
                        server 172.16.0.10 172.16.0.10:6443 weight 1 verify none check check-ssl inter 1s fall 2 rise 3
                        server 172.16.0.71 172.16.0.71:6443 weight 1 verify none check check-ssl inter 1s fall 2 rise 3
                        server 172.16.0.72 172.16.0.72:6443 weight 1 verify none check check-ssl inter 1s fall 2 rise 3
                        server 172.16.0.73 172.16.0.73:6443 weight 1 verify none check check-ssl inter 1s fall 2 rise 3
                    
                backend machine-config-server
                    balance roundrobin
                        server 172.16.0.10 172.16.0.10:22623 check
                        server 172.16.0.71 172.16.0.71:22623 check
                        server 172.16.0.72 172.16.0.72:22623 check
                        server 172.16.0.73 172.16.0.73:22623 check
                    
                backend router-http
                    balance source
                    mode tcp
                        server 172.16.0.74 172.16.0.74:80 check
                        server 172.16.0.75 172.16.0.75:80 check
                        server 172.16.0.76 172.16.0.76:80 check
                    
                backend router-https
                    balance source
                    mode tcp
                        server 172.16.0.74 172.16.0.74:443 check
                        server 172.16.0.75 172.16.0.75:443 check
                        server 172.16.0.76 172.16.0.76:443 check
            EOT
        }
    }

[1m  # module.lb[0].data.ignition_file.hostname[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "hostname" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/hostname"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = "lb-0"
        }
    }

[1m  # module.lb[0].data.ignition_file.static_ip[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/sysconfig/network-scripts/ifcfg-ens192"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens192
                DEVICE=ens192
                ONBOOT=yes
                IPADDR=172.16.0.69
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=9.9.9.9
                DNS2=161.26.0.10
                DNS3=172.16.0.10
            EOT
        }
    }

[1m  # module.lb[0].data.ignition_file.static_ip_loadbalancer[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_file" "static_ip_loadbalancer" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m mode     = 420
      [32m+[0m[0m path     = "/etc/sysconfig/network-scripts/ifcfg-ens224"
      [32m+[0m[0m rendered = (known after apply)

      [32m+[0m[0m content {
          [32m+[0m[0m content = <<-EOT
                TYPE=Ethernet
                BOOTPROTO=none
                NAME=ens224
                DEVICE=ens224
                ONBOOT=yes
                IPADDR=172.16.0.69
                PREFIX=16
                GATEWAY=172.16.0.1
                DOMAIN=test1.csm.stu
                DNS1=9.9.9.9
                DNS2=161.26.0.10
                DNS3=172.16.0.10
            EOT
        }
    }

[1m  # module.lb[0].data.ignition_systemd_unit.coredns[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_systemd_unit" "coredns" {
      [32m+[0m[0m content  = <<-EOT
            [Unit]
            Description=coredns
            After=network-online.target
            Wants=network-online.target
            
            [Service]
            TimeoutStartSec=0
            ExecStartPre=-/bin/podman kill coredns
            ExecStartPre=-/bin/podman rm coredns
            ExecStartPre=/bin/podman pull docker.io/coredns/coredns
            ExecStart=/bin/podman run --name coredns \
              --net=host \
              --privileged \
              -v /etc/coredns:/data:ro \
              --restart=always \
              docker.io/coredns/coredns -conf /data/Corefile
            
            [Install]
            WantedBy=multi-user.target
        EOT
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m name     = "coredns.service"
      [32m+[0m[0m rendered = (known after apply)
    }

[1m  # module.lb[0].data.ignition_systemd_unit.dhcpd[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_systemd_unit" "dhcpd" {
      [32m+[0m[0m content  = <<-EOT
            [Unit]
            Description=dhcpd
            After=network-online.target
            Wants=network-online.target
            
            [Service]
            TimeoutStartSec=0
            ExecStartPre=-/bin/podman kill dhcpd
            ExecStartPre=-/bin/podman rm dhcpd
            ExecStartPre=/bin/podman pull docker.io/networkboot/dhcpd
            ExecStart=/bin/podman run --name dhcpd \
              --net=host \
              --privileged=true \
              -v /etc/dhcpd:/data:rw \
              --restart=always \
              docker.io/networkboot/dhcpd ens192
            
            [Install]
            WantedBy=multi-user.target
        EOT
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m name     = "dhcpd.service"
      [32m+[0m[0m rendered = (known after apply)
    }

[1m  # module.lb[0].data.ignition_systemd_unit.haproxy[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_systemd_unit" "haproxy" {
      [32m+[0m[0m content  = <<-EOT
            [Unit]
            Description=haproxy
            After=network-online.target
            Wants=network-online.target
            
            [Service]
            TimeoutStartSec=0
            ExecStartPre=-/bin/podman kill haproxy
            ExecStartPre=-/bin/podman rm haproxy
            ExecStartPre=/bin/podman pull quay.io/openshift/origin-haproxy-router
            ExecStart=/bin/podman run --name haproxy \
              --net=host \
              --privileged \
              --entrypoint=/usr/sbin/haproxy \
              -v /etc/haproxy/haproxy.conf:/var/lib/haproxy/conf/haproxy.conf:Z \
              quay.io/openshift/origin-haproxy-router -f /var/lib/haproxy/conf/haproxy.conf
            ExecStop=/bin/podman rm -f haproxy
            
            [Install]
            WantedBy=multi-user.target
        EOT
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m name     = "haproxy.service"
      [32m+[0m[0m rendered = (known after apply)
    }

[1m  # module.lb[0].data.ignition_user.core[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "ignition_user" "core" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name                = "core"
      [32m+[0m[0m rendered            = (known after apply)
      [32m+[0m[0m ssh_authorized_keys = [
          [32m+[0m[0m "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC0lIuoaUpV3zhROQbj+dK1/VispnSJH2676+VRpzzg0OqOGfxxuWzhR41HH4ZNWU7pTXLSydyCjK+W093dkMJgJAnntZajL6COOUAQYZBh/9Yl0YaIpxlmN9/FemOgzveRaTMSRj+suGWGxTA4bBwXA5MBOdxwhVt9N4Nq7AJEbdQuCs2vhT/iG+nCp+eU56w3KQU4YXW+pYoiIO46g2pYFT8Wu4PArH5BaRXEYOkygSbm/9dfNz3d7Hrorc5laMzLQMoeW7Gpag3AGeIpxN50Nq+tWbYa5LFK/L9P2Cpy/L018AWwVOTnvBJjLsHqHKBhWYZdrQ7swzzRnFzW6f+HCsRErs9MhRk7Et1s2Yy+J8fxdhQVtHl7sHJs5xuzdYlupYdq8bZqnbMbMTG3X01gE1LUMQfONIA13alJK8eDb+8MZPyFib4FYHTeeU/+THHbbVgcxmkQC257rmEzGIZgr9e6eyj00P/HGBOorv0J2c0aCglGJ6pqgI22HbOnZPT6uEf8tQyRCHgdNiSBTwib8dv+hLf2wgjJp+dLRuyH6cmSmsH73pkEleqgk4n2cp88xPrwdGcEYNKKUsWffVBiXBIJG2McLG/ionvBeyACDAy4Sg0RI3lh6bIia6rnkSjUFOe32lSBig1VMIYsuoYIGjVxUDu5kVxCoG4qN5VV9w==",
        ]
    }

[1m  # module.lb[0].data.template_file.lb_ignition[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "template_file" "lb_ignition" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            {
              "ignition": {
                "version": "3.1.0"
              },
              "passwd": {
                "users": [
                  {
                    "name": "core",
                    "sshAuthorizedKeys": [
                      "${core_ssh_public_key}"
                    ]
                  }
                ]
              },
              "storage": {
                "files": [
                  {
                    "overwrite": true,
                    "path": "/etc/haproxy/haproxy.conf",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${haproxy_file_config}"
                    },
                    "mode": 420
                  },
                  {
                    "overwrite": true,
                    "path": "/etc/coredns/Corefile",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${coredn_file_corefile}"
                    },
                    "mode": 420
                  },
                  {
                    "overwrite": true,
                    "path": "/etc/coredns/cluster.db",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${coredn_file_clusterdb}"
                    },
                    "mode": 420
                  },
                  {
                    "overwrite": true,
                    "path": "/etc/dhcpd/dhcpd.conf",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${dhcpd_file_conf}"
                    },
                    "mode": 420
                  },      
                  {
                    "overwrite": true,
                    "path": "/etc/sysconfig/network-scripts/ifcfg-ens192",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${staticip_file_vm}"
                    },
                    "mode": 420
                  },
            %{ if dual_homed ~}
                  {
                    "overwrite": true,
                    "path": "/etc/sysconfig/network-scripts/ifcfg-ens224",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${staticip_file_loadbalancer}"
                    },
                    "mode": 420
                  },
            %{ endif ~}
                  {
                    "overwrite": true,
                    "path": "/etc/hostname",
                    "contents": {
                      "source": "data:text/plain;charset=utf-8;base64,${hostname_file}"
                    },
                    "mode": 420
                  }
                ]
              },
              "systemd": {
                "units": [
                  {
                    "name": "haproxy.service",
                    "enabled": true,
                    "contents": "${haproxy_systemd_unit}"
                  },
                  {
                    "name": "coredns.service",
                    "enabled": true,
                    "contents": "${coredns_systemd_unit}"
                  }
                        {
                    "name": "dhcpd.service",
                    "enabled": true,
                          "contents": "${dhcpd_systemd_unit}"
                  }
                ]
              }
            }
        EOT
      [32m+[0m[0m vars     = {
          [32m+[0m[0m "core_ssh_public_key"        = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC0lIuoaUpV3zhROQbj+dK1/VispnSJH2676+VRpzzg0OqOGfxxuWzhR41HH4ZNWU7pTXLSydyCjK+W093dkMJgJAnntZajL6COOUAQYZBh/9Yl0YaIpxlmN9/FemOgzveRaTMSRj+suGWGxTA4bBwXA5MBOdxwhVt9N4Nq7AJEbdQuCs2vhT/iG+nCp+eU56w3KQU4YXW+pYoiIO46g2pYFT8Wu4PArH5BaRXEYOkygSbm/9dfNz3d7Hrorc5laMzLQMoeW7Gpag3AGeIpxN50Nq+tWbYa5LFK/L9P2Cpy/L018AWwVOTnvBJjLsHqHKBhWYZdrQ7swzzRnFzW6f+HCsRErs9MhRk7Et1s2Yy+J8fxdhQVtHl7sHJs5xuzdYlupYdq8bZqnbMbMTG3X01gE1LUMQfONIA13alJK8eDb+8MZPyFib4FYHTeeU/+THHbbVgcxmkQC257rmEzGIZgr9e6eyj00P/HGBOorv0J2c0aCglGJ6pqgI22HbOnZPT6uEf8tQyRCHgdNiSBTwib8dv+hLf2wgjJp+dLRuyH6cmSmsH73pkEleqgk4n2cp88xPrwdGcEYNKKUsWffVBiXBIJG2McLG/ionvBeyACDAy4Sg0RI3lh6bIia6rnkSjUFOe32lSBig1VMIYsuoYIGjVxUDu5kVxCoG4qN5VV9w=="
          [32m+[0m[0m "coredn_file_clusterdb"      = "JE9SSUdJTiB0ZXN0MS5jc20uc3R1LgpACTM2MDAgSU4JU09BIGRucy4gb3BlbnNoaWZ0LnRlc3QxLmNzbS5zdHUuICgKCQkJCTIwMTcwNDI3NDUgOyBzZXJpYWwKCQkJCTcyMDAgICAgICAgOyByZWZyZXNoICgyIGhvdXJzKQoJCQkJMzYwMCAgICAgICA7IHJldHJ5ICgxIGhvdXIpCgkJCQkxMjA5NjAwICAgIDsgZXhwaXJlICgyIHdlZWtzKQoJCQkJMzYwMCAgICAgICA7IG1pbmltdW0gKDEgaG91cikKCQkJCSkKCgkzNjAwIElOIE5TIGRucwoKZG5zICAgICBJTiAgQSAgIDE3Mi4xNi4wLjY5CiouYXBwcy50ZXN0MS5jc20uc3R1ICAgICBJTiBBIDE3Mi4xNi4wLjY5CmFwaS1pbnQudGVzdDEuY3NtLnN0dSAgICAgSU4gQSAxNzIuMTYuMC42OQphcGkudGVzdDEuY3NtLnN0dSAgICAgSU4gQSAxNzIuMTYuMC42OQpib290c3RyYXAtMDAudGVzdDEuY3NtLnN0dSAgICAgSU4gQSAxNzIuMTYuMC4xMApjb21wdXRlLTAwLnRlc3QxLmNzbS5zdHUgICAgIElOIEEgMTcyLjE2LjAuNzQKY29tcHV0ZS0wMS50ZXN0MS5jc20uc3R1ICAgICBJTiBBIDE3Mi4xNi4wLjc1CmNvbXB1dGUtMDIudGVzdDEuY3NtLnN0dSAgICAgSU4gQSAxNzIuMTYuMC43Ngpjb250cm9sLXBsYW5lLTAwLnRlc3QxLmNzbS5zdHUgICAgIElOIEEgMTcyLjE2LjAuNzEKY29udHJvbC1wbGFuZS0wMS50ZXN0MS5jc20uc3R1ICAgICBJTiBBIDE3Mi4xNi4wLjcyCmNvbnRyb2wtcGxhbmUtMDIudGVzdDEuY3NtLnN0dSAgICAgSU4gQSAxNzIuMTYuMC43MwoKCiRPUklHSU4gMC4xNi4xNzIuaW4tYWRkci5hcnBhLgpAICAgICAgIDM2MDAgSU4gU09BIGRucy4gb3BlbnNoaWZ0LnRlc3QxLmNzbS5zdHUuICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMDE3MDQyNzQ1IDsgc2VyaWFsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzIwMCAgICAgICA7IHJlZnJlc2ggKDIgaG91cnMpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzYwMCAgICAgICA7IHJldHJ5ICgxIGhvdXIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTIwOTYwMCAgICA7IGV4cGlyZSAoMiB3ZWVrcykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzNjAwICAgICAgIDsgbWluaW11bSAoMSBob3VyKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICBJTiAgICAgICBOUyAgICAgMTcyLjE2LjAuNjkKNjkgICAgICAgIElOICAgICAgUFRSIGFwaS1pbnQudGVzdDEuY3NtLnN0dS4KNjkgICAgICAgIElOICAgICAgUFRSIGFwaS50ZXN0MS5jc20uc3R1LgoxMCAgICAgICAgSU4gICAgICBQVFIgYm9vdHN0cmFwLTAwLnRlc3QxLmNzbS5zdHUuCjc0ICAgICAgICBJTiAgICAgIFBUUiBjb21wdXRlLTAwLnRlc3QxLmNzbS5zdHUuCjc1ICAgICAgICBJTiAgICAgIFBUUiBjb21wdXRlLTAxLnRlc3QxLmNzbS5zdHUuCjc2ICAgICAgICBJTiAgICAgIFBUUiBjb21wdXRlLTAyLnRlc3QxLmNzbS5zdHUuCjcxICAgICAgICBJTiAgICAgIFBUUiBjb250cm9sLXBsYW5lLTAwLnRlc3QxLmNzbS5zdHUuCjcyICAgICAgICBJTiAgICAgIFBUUiBjb250cm9sLXBsYW5lLTAxLnRlc3QxLmNzbS5zdHUuCjczICAgICAgICBJTiAgICAgIFBUUiBjb250cm9sLXBsYW5lLTAyLnRlc3QxLmNzbS5zdHUuCg=="
          [32m+[0m[0m "coredn_file_corefile"       = "Ljo1MyB7CiAgICBmb3J3YXJkIC4gOS45LjkuOSAxNjEuMjYuMC4xMCAxNzIuMTYuMC4xMAogICAgbG9nCiAgICBlcnJvcnMKfQoKdGVzdDEuY3NtLnN0dTo1MyB7CiAgICBmaWxlIC9kYXRhL2NsdXN0ZXIuZGIKICAgIGxvZwogICAgZXJyb3JzCn0KCjAuMTYuMTcyLmluLWFkZHIuYXJwYTo1MyB7CiAgICBmaWxlIC9kYXRhL2NsdXN0ZXIuZGIKICAgIGxvZwogICAgZXJyb3JzCn0K"
          [32m+[0m[0m "coredns_systemd_unit"       = <<-EOT
                [Unit]
                Description=coredns
                After=network-online.target
                Wants=network-online.target
                
                [Service]
                TimeoutStartSec=0
                ExecStartPre=-/bin/podman kill coredns
                ExecStartPre=-/bin/podman rm coredns
                ExecStartPre=/bin/podman pull docker.io/coredns/coredns
                ExecStart=/bin/podman run --name coredns \
                  --net=host \
                  --privileged \
                  -v /etc/coredns:/data:ro \
                  --restart=always \
                  docker.io/coredns/coredns -conf /data/Corefile
                
                [Install]
                WantedBy=multi-user.target
            EOT
          [32m+[0m[0m "dhcpd_file_conf"            = "IyBjYXQgL3Vzci9zaGFyZS9kb2MvZGhjcCovZGhjcGQuY29uZi5zYW1wbGUNCiMgZGhjcGQuY29uZg0KIw0KIyBTYW1wbGUgY29uZmlndXJhdGlvbiBmaWxlIGZvciBJU0MgZGhjcGQNCiMNCnN1Ym5ldCAxNzIuMTYuMC4wIG5ldG1hc2sgMjU1LjI1NS4yNTUuMCB7DQogIG9wdGlvbiBkb21haW4tbmFtZS1zZXJ2ZXJzICAxNzIuMTYuMC42OTsNCiAgb3B0aW9uIGRvbWFpbi1uYW1lICJ0ZXN0MS5jc20uc3R1IjsNCiAgb3B0aW9uIHJvdXRlcnMgMTcyLjE2LjAuMTsNCiAgb3B0aW9uIGJyb2FkY2FzdC1hZGRyZXNzIDE3Mi4xNi4wLjI1NDsNCiAgZGVmYXVsdC1sZWFzZS10aW1lIDYwMDsNCiAgbWF4LWxlYXNlLXRpbWUgNzIwMDsNCn0NCg0KDQoNCmhvc3QgYm9vdHN0cmFwLTAwIHsNCiAgaGFyZHdhcmUgZXRoZXJuZXQgMDA6NTA6NTY6MDE6MzA6MTA7DQogIGZpeGVkLWFkZHJlc3MgMTcyLjE2LjAuMTA7DQp9DQpob3N0IGNvbXB1dGUtMDAgew0KICBoYXJkd2FyZSBldGhlcm5ldCAwMDo1MDo1NjowMTozMDo3NDsNCiAgZml4ZWQtYWRkcmVzcyAxNzIuMTYuMC43NDsNCn0NCmhvc3QgY29tcHV0ZS0wMSB7DQogIGhhcmR3YXJlIGV0aGVybmV0IDAwOjUwOjU2OjAxOjMwOjc1Ow0KICBmaXhlZC1hZGRyZXNzIDE3Mi4xNi4wLjc1Ow0KfQ0KaG9zdCBjb21wdXRlLTAyIHsNCiAgaGFyZHdhcmUgZXRoZXJuZXQgMDA6NTA6NTY6MDE6MzA6NzY7DQogIGZpeGVkLWFkZHJlc3MgMTcyLjE2LjAuNzY7DQp9DQpob3N0IGNvbnRyb2wtcGxhbmUtMDAgew0KICBoYXJkd2FyZSBldGhlcm5ldCAwMDo1MDo1NjowMTozMDo3MTsNCiAgZml4ZWQtYWRkcmVzcyAxNzIuMTYuMC43MTsNCn0NCmhvc3QgY29udHJvbC1wbGFuZS0wMSB7DQogIGhhcmR3YXJlIGV0aGVybmV0IDAwOjUwOjU2OjAxOjMwOjcyOw0KICBmaXhlZC1hZGRyZXNzIDE3Mi4xNi4wLjcyOw0KfQ0KaG9zdCBjb250cm9sLXBsYW5lLTAyIHsNCiAgaGFyZHdhcmUgZXRoZXJuZXQgMDA6NTA6NTY6MDE6MzA6NzM7DQogIGZpeGVkLWFkZHJlc3MgMTcyLjE2LjAuNzM7DQp9DQogDQoNCg0K"
          [32m+[0m[0m "dhcpd_systemd_unit"         = <<-EOT
                [Unit]
                Description=dhcpd
                After=network-online.target
                Wants=network-online.target
                
                [Service]
                TimeoutStartSec=0
                ExecStartPre=-/bin/podman kill dhcpd
                ExecStartPre=-/bin/podman rm dhcpd
                ExecStartPre=/bin/podman pull docker.io/networkboot/dhcpd
                ExecStart=/bin/podman run --name dhcpd \
                  --net=host \
                  --privileged=true \
                  -v /etc/dhcpd:/data:rw \
                  --restart=always \
                  docker.io/networkboot/dhcpd ens192
                
                [Install]
                WantedBy=multi-user.target
            EOT
          [32m+[0m[0m "dual_homed"                 = "true"
          [32m+[0m[0m "haproxy_file_config"        = "ZGVmYXVsdHMKICBtYXhjb25uIDIwMDAwCiAgbW9kZSAgICB0Y3AKICBsb2cgICAgIC92YXIvcnVuL2hhcHJveHkvaGFwcm94eS1sb2cuc29jayBsb2NhbDAKICBvcHRpb24gIGRvbnRsb2dudWxsCiAgcmV0cmllcyAzCiAgdGltZW91dCBodHRwLXJlcXVlc3QgMTBzCiAgdGltZW91dCBxdWV1ZSAgICAgICAgMW0KICB0aW1lb3V0IGNvbm5lY3QgICAgICAxMHMKICB0aW1lb3V0IGNsaWVudCAgICAgICA4NjQwMHMKICB0aW1lb3V0IHNlcnZlciAgICAgICA4NjQwMHMKICB0aW1lb3V0IHR1bm5lbCAgICAgICA4NjQwMHMKCmZyb250ZW5kIGFwaS1zZXJ2ZXIKICAgIGJpbmQgOjY0NDMKICAgIGRlZmF1bHRfYmFja2VuZCBhcGktc2VydmVyCgpmcm9udGVuZCBtYWNoaW5lLWNvbmZpZy1zZXJ2ZXIKICAgIGJpbmQgMTcyLjE2LjAuNjk6MjI2MjMKICAgIGRlZmF1bHRfYmFja2VuZCBtYWNoaW5lLWNvbmZpZy1zZXJ2ZXIKCmZyb250ZW5kIHJvdXRlci1odHRwCiAgICBiaW5kIDo4MAogICAgZGVmYXVsdF9iYWNrZW5kIHJvdXRlci1odHRwCgpmcm9udGVuZCByb3V0ZXItaHR0cHMKICAgIGJpbmQgOjQ0MwogICAgZGVmYXVsdF9iYWNrZW5kIHJvdXRlci1odHRwcwoKYmFja2VuZCBhcGktc2VydmVyCiAgICBvcHRpb24gIGh0dHBjaGsgR0VUIC9yZWFkeXogSFRUUC8xLjAKICAgIG9wdGlvbiAgbG9nLWhlYWx0aC1jaGVja3MKICAgIGJhbGFuY2Ugcm91bmRyb2JpbgogICAgICAgIHNlcnZlciAxNzIuMTYuMC4xMCAxNzIuMTYuMC4xMDo2NDQzIHdlaWdodCAxIHZlcmlmeSBub25lIGNoZWNrIGNoZWNrLXNzbCBpbnRlciAxcyBmYWxsIDIgcmlzZSAzCiAgICAgICAgc2VydmVyIDE3Mi4xNi4wLjcxIDE3Mi4xNi4wLjcxOjY0NDMgd2VpZ2h0IDEgdmVyaWZ5IG5vbmUgY2hlY2sgY2hlY2stc3NsIGludGVyIDFzIGZhbGwgMiByaXNlIDMKICAgICAgICBzZXJ2ZXIgMTcyLjE2LjAuNzIgMTcyLjE2LjAuNzI6NjQ0MyB3ZWlnaHQgMSB2ZXJpZnkgbm9uZSBjaGVjayBjaGVjay1zc2wgaW50ZXIgMXMgZmFsbCAyIHJpc2UgMwogICAgICAgIHNlcnZlciAxNzIuMTYuMC43MyAxNzIuMTYuMC43Mzo2NDQzIHdlaWdodCAxIHZlcmlmeSBub25lIGNoZWNrIGNoZWNrLXNzbCBpbnRlciAxcyBmYWxsIDIgcmlzZSAzCiAgICAKYmFja2VuZCBtYWNoaW5lLWNvbmZpZy1zZXJ2ZXIKICAgIGJhbGFuY2Ugcm91bmRyb2JpbgogICAgICAgIHNlcnZlciAxNzIuMTYuMC4xMCAxNzIuMTYuMC4xMDoyMjYyMyBjaGVjawogICAgICAgIHNlcnZlciAxNzIuMTYuMC43MSAxNzIuMTYuMC43MToyMjYyMyBjaGVjawogICAgICAgIHNlcnZlciAxNzIuMTYuMC43MiAxNzIuMTYuMC43MjoyMjYyMyBjaGVjawogICAgICAgIHNlcnZlciAxNzIuMTYuMC43MyAxNzIuMTYuMC43MzoyMjYyMyBjaGVjawogICAgCmJhY2tlbmQgcm91dGVyLWh0dHAKICAgIGJhbGFuY2Ugc291cmNlCiAgICBtb2RlIHRjcAogICAgICAgIHNlcnZlciAxNzIuMTYuMC43NCAxNzIuMTYuMC43NDo4MCBjaGVjawogICAgICAgIHNlcnZlciAxNzIuMTYuMC43NSAxNzIuMTYuMC43NTo4MCBjaGVjawogICAgICAgIHNlcnZlciAxNzIuMTYuMC43NiAxNzIuMTYuMC43Njo4MCBjaGVjawogICAgCmJhY2tlbmQgcm91dGVyLWh0dHBzCiAgICBiYWxhbmNlIHNvdXJjZQogICAgbW9kZSB0Y3AKICAgICAgICBzZXJ2ZXIgMTcyLjE2LjAuNzQgMTcyLjE2LjAuNzQ6NDQzIGNoZWNrCiAgICAgICAgc2VydmVyIDE3Mi4xNi4wLjc1IDE3Mi4xNi4wLjc1OjQ0MyBjaGVjawogICAgICAgIHNlcnZlciAxNzIuMTYuMC43NiAxNzIuMTYuMC43Njo0NDMgY2hlY2sKICAgIAo="
          [32m+[0m[0m "haproxy_systemd_unit"       = <<-EOT
                [Unit]
                Description=haproxy
                After=network-online.target
                Wants=network-online.target
                
                [Service]
                TimeoutStartSec=0
                ExecStartPre=-/bin/podman kill haproxy
                ExecStartPre=-/bin/podman rm haproxy
                ExecStartPre=/bin/podman pull quay.io/openshift/origin-haproxy-router
                ExecStart=/bin/podman run --name haproxy \
                  --net=host \
                  --privileged \
                  --entrypoint=/usr/sbin/haproxy \
                  -v /etc/haproxy/haproxy.conf:/var/lib/haproxy/conf/haproxy.conf:Z \
                  quay.io/openshift/origin-haproxy-router -f /var/lib/haproxy/conf/haproxy.conf
                ExecStop=/bin/podman rm -f haproxy
                
                [Install]
                WantedBy=multi-user.target
            EOT
          [32m+[0m[0m "hostname_file"              = "bGItMA=="
          [32m+[0m[0m "staticip_file_loadbalancer" = "VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczIyNApERVZJQ0U9ZW5zMjI0Ck9OQk9PVD15ZXMKSVBBRERSPTE3Mi4xNi4wLjY5ClBSRUZJWD0xNgpHQVRFV0FZPTE3Mi4xNi4wLjEKRE9NQUlOPXRlc3QxLmNzbS5zdHUKRE5TMT05LjkuOS45CkROUzI9MTYxLjI2LjAuMTAKRE5TMz0xNzIuMTYuMC4xMAo="
          [32m+[0m[0m "staticip_file_vm"           = "VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTE3Mi4xNi4wLjY5ClBSRUZJWD0xNgpHQVRFV0FZPTE3Mi4xNi4wLjEKRE9NQUlOPXRlc3QxLmNzbS5zdHUKRE5TMT05LjkuOS45CkROUzI9MTYxLjI2LjAuMTAKRE5TMz0xNzIuMTYuMC4xMAo="
        }
    }

[1m  # module.lb[0].local_file.write_ignition[0m will be created
[0m  [32m+[0m[0m resource "local_file" "write_ignition" {
      [32m+[0m[0m content              = (known after apply)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "600"
      [32m+[0m[0m filename             = "/opt/terraform/installer/test1/lb_config.json"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.lb[0].vcd_vapp_vm.loadbalancer["lb-00.test1.csm.stu"][0m will be created
[0m  [32m+[0m[0m resource "vcd_vapp_vm" "loadbalancer" {
      [32m+[0m[0m accept_all_eulas               = true
      [32m+[0m[0m computer_name                  = (known after apply)
      [32m+[0m[0m consolidate_disks_on_create    = true
      [32m+[0m[0m cpu_cores                      = (known after apply)
      [32m+[0m[0m cpu_hot_add_enabled            = false
      [32m+[0m[0m cpu_limit                      = (known after apply)
      [32m+[0m[0m cpu_priority                   = (known after apply)
      [32m+[0m[0m cpu_reservation                = (known after apply)
      [32m+[0m[0m cpu_shares                     = (known after apply)
      [32m+[0m[0m cpus                           = 2
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m expose_hardware_virtualization = false
      [32m+[0m[0m firmware                       = (known after apply)
      [32m+[0m[0m guest_properties               = (known after apply)
      [32m+[0m[0m hardware_version               = (known after apply)
      [32m+[0m[0m href                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m inherited_metadata             = (known after apply)
      [32m+[0m[0m internal_disk                  = (known after apply)
      [32m+[0m[0m memory                         = 4096
      [32m+[0m[0m memory_hot_add_enabled         = false
      [32m+[0m[0m memory_limit                   = (known after apply)
      [32m+[0m[0m memory_priority                = (known after apply)
      [32m+[0m[0m memory_reservation             = (known after apply)
      [32m+[0m[0m memory_shares                  = (known after apply)
      [32m+[0m[0m metadata                       = (known after apply)
      [32m+[0m[0m name                           = "lb-00"
      [32m+[0m[0m org                            = "763fb494-23a2-4d81-94ea-af7d2e802a1a"
      [32m+[0m[0m os_type                        = (known after apply)
      [32m+[0m[0m placement_policy_id            = (known after apply)
      [32m+[0m[0m power_on                       = true
      [32m+[0m[0m prevent_update_power_off       = false
      [32m+[0m[0m security_tags                  = (known after apply)
      [32m+[0m[0m sizing_policy_id               = (known after apply)
      [32m+[0m[0m status                         = (known after apply)
      [32m+[0m[0m status_text                    = (known after apply)
      [32m+[0m[0m storage_profile                = (known after apply)
      [32m+[0m[0m vapp_id                        = (known after apply)
      [32m+[0m[0m vapp_name                      = "test1-csm.stu"
      [32m+[0m[0m vapp_template_id               = "urn:vcloud:vapptemplate:a55c57d3-a961-442f-9429-8a2693319b83"
      [32m+[0m[0m vdc                            = "Rob1"
      [32m+[0m[0m vm_type                        = (known after apply)

      [32m+[0m[0m network {
          [32m+[0m[0m adapter_type       = (known after apply)
          [32m+[0m[0m connected          = true
          [32m+[0m[0m ip                 = "172.16.0.69"
          [32m+[0m[0m ip_allocation_mode = "MANUAL"
          [32m+[0m[0m is_primary         = true
          [32m+[0m[0m mac                = "00:50:56:01:30:69"
          [32m+[0m[0m name               = "ocpnet"
          [32m+[0m[0m type               = "org"
        }

      [32m+[0m[0m override_template_disk {
          [32m+[0m[0m bus_number      = 0
          [32m+[0m[0m bus_type        = "paravirtual"
          [32m+[0m[0m size_in_mb      = 250000
          [32m+[0m[0m unit_number     = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.network.data.vcd_nsxt_app_port_profile.mirror-profile-inbound[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "vcd_nsxt_app_port_profile" "mirror-profile-inbound" {
      [32m+[0m[0m app_port    = (known after apply)
      [32m+[0m[0m context_id  = "urn:vcloud:vdc:e8c9c0e0-a2ab-45d5-ba77-8c4f6bfc8f8e"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "test1_mirror-profile-inbound"
      [32m+[0m[0m scope       = "TENANT"
    }

[1m  # module.network.vcd_nsxt_app_port_profile.mirror-profile-inbound[0m will be created
[0m  [32m+[0m[0m resource "vcd_nsxt_app_port_profile" "mirror-profile-inbound" {
      [32m+[0m[0m context_id      = "urn:vcloud:vdc:e8c9c0e0-a2ab-45d5-ba77-8c4f6bfc8f8e"
      [32m+[0m[0m description     = "test1 Application port profile for mirror Inbound"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name            = "test1_mirror-inbound"
      [32m+[0m[0m nsxt_manager_id = (known after apply)
      [32m+[0m[0m scope           = "TENANT"
      [32m+[0m[0m vdc             = (known after apply)

      [32m+[0m[0m app_port {
          [32m+[0m[0m port     = [
              [32m+[0m[0m "<port of mirror>",
            ]
          [32m+[0m[0m protocol = "TCP"
        }
    }

[1m  # module.network.vcd_nsxt_firewall.cluster_allow[0m will be updated in-place
[0m  [33m~[0m[0m resource "vcd_nsxt_firewall" "cluster_allow" {
        id              = "urn:vcloud:gateway:ad269092-38d8-4caf-9ad2-2e2746e10dc6"
        [90m# (1 unchanged attribute hidden)[0m[0m

      [33m~[0m[0m rule {
          [33m~[0m[0m app_port_profile_ids = [
              [31m-[0m[0m "urn:vcloud:applicationPortProfile:7164784c-6921-45f1-a659-098dc8ee2ea9",
            ]
          [33m~[0m[0m destination_ids      = [
              [31m-[0m[0m "urn:vcloud:firewallGroup:53e8800a-79ae-4c66-b8b9-581472e7820a",
            ]
          [33m~[0m[0m direction            = "IN" [33m->[0m[0m "OUT"
            id                   = "20b7b37a-da7b-4aaf-b9c1-de8be692f59e"
          [33m~[0m[0m name                 = "bastion_inbound_allow" [33m->[0m[0m "test1_cluster_allow_rule"
          [33m~[0m[0m source_ids           = [
              [32m+[0m[0m "urn:vcloud:firewallGroup:af666718-69bf-4673-803d-f8acdc36d041",
            ]
            [90m# (4 unchanged attributes hidden)[0m[0m
        }
      [31m-[0m[0m rule {
          [31m-[0m[0m action               = "ALLOW" [90m-> null[0m[0m
          [31m-[0m[0m app_port_profile_ids = [] [90m-> null[0m[0m
          [31m-[0m[0m destination_ids      = [] [90m-> null[0m[0m
          [31m-[0m[0m direction            = "OUT" [90m-> null[0m[0m
          [31m-[0m[0m enabled              = true [90m-> null[0m[0m
          [31m-[0m[0m id                   = "0bb36e61-3108-4132-b601-831b511538d3" [90m-> null[0m[0m
          [31m-[0m[0m ip_protocol          = "IPV4" [90m-> null[0m[0m
          [31m-[0m[0m logging              = false [90m-> null[0m[0m
          [31m-[0m[0m name                 = "bastion_outbound_allow" [90m-> null[0m[0m
          [31m-[0m[0m source_ids           = [
              [31m-[0m[0m "urn:vcloud:firewallGroup:f1f71f57-f178-4f74-9238-b76734bac875",
            ] [90m-> null[0m[0m
        }
    }

[1m  # module.network.vcd_nsxt_firewall.console_allow[0m will be created
[0m  [32m+[0m[0m resource "vcd_nsxt_firewall" "console_allow" {
      [32m+[0m[0m edge_gateway_id = "urn:vcloud:gateway:ad269092-38d8-4caf-9ad2-2e2746e10dc6"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m vdc             = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m action          = "ALLOW"
          [32m+[0m[0m destination_ids = [
              [32m+[0m[0m "urn:vcloud:firewallGroup:720a7a55-1538-4eb7-b942-2ac0411df4ed",
            ]
          [32m+[0m[0m direction       = "IN"
          [32m+[0m[0m enabled         = true
          [32m+[0m[0m id              = (known after apply)
          [32m+[0m[0m ip_protocol     = "IPV4"
          [32m+[0m[0m logging         = false
          [32m+[0m[0m name            = "test1_console_allow_rule"
        }
    }

[1m  # module.network.vcd_nsxt_firewall.lb[0m will be created
[0m  [32m+[0m[0m resource "vcd_nsxt_firewall" "lb" {
      [32m+[0m[0m edge_gateway_id = "urn:vcloud:gateway:ad269092-38d8-4caf-9ad2-2e2746e10dc6"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m vdc             = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m action      = "ALLOW"
          [32m+[0m[0m direction   = "OUT"
          [32m+[0m[0m enabled     = true
          [32m+[0m[0m id          = (known after apply)
          [32m+[0m[0m ip_protocol = "IPV4"
          [32m+[0m[0m logging     = false
          [32m+[0m[0m name        = "test1_lb_outbound_allow"
          [32m+[0m[0m source_ids  = [
              [32m+[0m[0m "urn:vcloud:firewallGroup:62f3c125-649c-4695-95b6-63dc0a1ae79c",
            ]
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m action               = "ALLOW"
          [32m+[0m[0m app_port_profile_ids = (known after apply)
          [32m+[0m[0m destination_ids      = (known after apply)
          [32m+[0m[0m direction            = "IN"
          [32m+[0m[0m enabled              = true
          [32m+[0m[0m id                   = (known after apply)
          [32m+[0m[0m ip_protocol          = "IPV4"
          [32m+[0m[0m logging              = false
          [32m+[0m[0m name                 = "test1_mirror_allow_rule"
        }
    }

[1m  # module.network.vcd_nsxt_ip_set.mirror-ipset[0m will be created
[0m  [32m+[0m[0m resource "vcd_nsxt_ip_set" "mirror-ipset" {
      [32m+[0m[0m description     = "test1 IP Set mirror"
      [32m+[0m[0m edge_gateway_id = "urn:vcloud:gateway:ad269092-38d8-4caf-9ad2-2e2746e10dc6"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m ip_addresses    = [
          [32m+[0m[0m "<ip of mirror>",
        ]
      [32m+[0m[0m name            = "test1_mirror-ipset"
      [32m+[0m[0m owner_id        = (known after apply)
      [32m+[0m[0m vdc             = (known after apply)
    }

[1mPlan:[0m 28 to add, 1 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m output_file = (known after apply)
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33m│[0m [0m
[33m│[0m [0m[0m  with module.network.data.vcd_nsxt_edgegateway.edge,
[33m│[0m [0m  on network/network.tf line 14, in data "vcd_nsxt_edgegateway" "edge":
[33m│[0m [0m  14:   vdc          = [4mvar.vcd_vdc[0m[0m
[33m│[0m [0m
[33m│[0m [0mThis field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
[33m╵[0m[0m
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m

Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...

